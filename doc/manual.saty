@require: class-exdesign/exdesign
@require: class-exdesign/article-ja
%@import: ../exdesign
%@import: ../article-ja
@require: code
@require: itemize

document (|
        title = {ExDesignパッケージ v0.3};
        author = {Naoki Kaneko (puripuri2100)};
        date = {2021/05/22};
        show-title = true;
        show-toc = true;
        style = ArticleJa.a4paper ;
        design = ArticleJa.article;
        header-footer = ArticleJa.normalHF;
        fonts = ArticleJa.fonts;
|) '<
  +section{はじめに}<
      +p{ExDesignパッケージは、デザインと、クラスファイルとして成立するために必要な設定や提供するコマンドを分離させた\SATySFi;用の新しいクラスファイルです。
      これによって、基本となる体裁を維持しつつ、デザインを（ある程度の制約はあるものの）自由に変えることが可能になります。}
      +p{この特性のため、ExDesignパッケージは通常のクラスファイルであるexdesign.satyhに加えて、いくつかの補助パッケージも同時に提供することになります。また、補助パッケージを自作することも可能であり、推奨はされないが一つのドキュメントに全ての指定を書き込むこともできる。}
  >
  +section{簡単な使用方法}<
      +p{補助パッケージを使用する際にはこのように書きます。}
        +code(`
@require: class-exdesign/exdesign
@require: class-exdesign/article-ja

document (|
        title = {title};
        author = {puripuri2100};
        date = {2021/05/22};
        show-title = true;
        show-toc = true;
        style = ArticleJa.a4paper;
        design = ArticleJa.article;
        header-footer = ArticleJa.normalHF;
        fonts = ArticleJa.fonts;
|) '<
    +p{test}
>`
);
+pn{このように、\code(`@require : class-exdesign/exdesign`);でパッケージを読み込み、補助パッケージであるarticle-ja.satyhを\code(`@require : class-exdesign/article-ja`);で読み込みます（勿論、article-ja.satygなどの置き場所によってどのコマンドを使用して読み込むかは変わりますが）。}

+p{そして、\code(`document`);コマンドの引数であるレコード型に必要な値を入れていきます。}

+p{\code(`title`);ではinline-textを入れてください。出力されるタイトル部分になります。\code(`author`);は著者、\code(`date`);は日付です。\code(`show-title`);と\code(`show-toc`);には真偽値を入れてください。前者は「タイトルを出力するか」どうかで、後者は「目次を出力するかどうか」です。これはstdjaクラスと同じです。}

+p{\code(`style`);では、版面に関する設定を行いますが、22個ほど指定しなければならない値があるレコード型なので、補助パッケージで既にその値を入力済みとなっている関数を使いましょう。ここでの\code(`ArticleJa.a4paper`);がそれです。同様にして\code(`design`);と\code(`header-footer`);も指定します。これで後は書くだけです。}
  >
+section{提供するコマンド}<
    +p{ExDesignパッケージが提供するコマンドです。}
    +listing{
        * \code(`` +part?:(`string`){inline-text}<block-text> ``); : 部を提供する。
        * \code(`` +chapter?:(`string`){inline-text}<block-text> ``); : 章を提供する。
        * \code(`` +section?:(`string`){inline-text}<block-text> ``); : 節を提供する。
        * \code(`` +subsection?:(`string`){inline-text}<block-text> ``); : 小節を提供する。
        * \code(`` +subsubsection?:(`string`){inline-text}<block-text> ``); : 小々節を提供する。
        * \code(` +p-ja{inline-text} `); : 日本語を入れる段落
        * \code(` +p-en{inline-text} `); : 英語を入れる段落
        * \code(` +p{inline-text} `); : 文字を入れる段落（言語選択によって中身が\code(` +p-ja `);もしくは\code(` +p-en `);になる。）
        * \code(` +p{inline-text} `); : 文字を入れる行頭インデント無しの段落
        * \code(` \textrm{inline-text} `); : ローマン体にする
        * \code(` \textbf{inline-text} `); : ボールド体にする
        * \code(` \textit{inline-text} `); : イタリック体にする
        * \code(` \textsf{inline-text} `); : サンセリフ体にする
        * \code(` \textmc{inline-text} `); : 明朝体にする
        * \code(` \textgt{inline-text} `); : ゴチック体にする
        * \code(` \footnote{inline-text} `); : フットノートを提供する（ただし、\SATySFi; for Windows Versionでは空）
    }
>
+section{\code(`document`);コマンドで必要なレコード型について}<
    +p{レコード型部分の定義}
    +code(`
val document : 'a -> block-text -> document
  constraint 'a :: (|
    title : inline-text;
    author : inline-text;
    date : inline-text;
    show-title : bool;
    show-toc : bool;
    style : (|
      page-width : length;
      page-height : length;
      top-space : length;
      bottom-space : length;
      left-space : length;
      right-space : length;
      header-left-space : length;
      header-right-space : length;
      header-height : length;
      footer-left-space : length;
      footer-right-space : length;
      footer-height : length;
      titlepage-top-space : length;
      titlepage-bottom-space : length;
      titlepage-left-space : length;
      titlepage-right-space : length;
      tocpage-top-space : length;
      tocpage-bottom-space : length;
      tocpage-left-space : length;
      tocpage-right-space : length;
      normal-fontsize : length;
      language-japanese : bool;
    |);
    design : (|
      oneside : bool;

      titlepage : bool;
      title-fontsize : length;
      author-fontsize : length;
      date-fontsize : length;

      tocpage : bool;

      toc-fontsize : length;
      toc-line-text-part : inline-text;
      toc-line-text-chapter : inline-text;
      toc-line-text-section : inline-text;
      toc-line-text-subsection : inline-text;
      toc-line-text-subsubsection : inline-text;
      toc-line-space-part : length;
      toc-line-space-chapter : length;
      toc-line-space-section : length;
      toc-line-space-subsection : length;
      toc-line-space-subsubsection : length;
      toc-name-fontsize-part : length;
      toc-name-fontsize-chapter : length;
      toc-name-fontsize-section : length;
      toc-name-fontsize-subsection : length;
      toc-name-fontsize-subsubsection : length;
      toc-depth : int;

      part-fontsize : length;
      part-page-break-1 : bool;
      part-num-function: (int -> string);
      part-top-space : length;
      part-bottom-space : length;
      part-left-space : length;
      part-line-break : bool;
      part-right-space : length;
      part-page-break-2 : bool;

      chapter-fontsize : length;
      chapter-page-break-1 : bool;
      chapter-num-function: (int -> string);
      chapter-top-space : length;
      chapter-bottom-space : length;
      chapter-left-space : length;
      chapter-line-break : bool;
      chapter-right-space : length;
      chapter-page-break-2 : bool;

      section-fontsize : length;
      section-num-function: (int -> int -> string);
      section-top-space : length;
      section-bottom-space : length;
      section-left-space : length;
      section-line-break : bool;
      section-right-space : length;

      subsection-fontsize : length;
      subsection-num-function: (int -> int -> int -> string);
      subsection-top-space : length;
      subsection-bottom-space : length;
      subsection-left-space : length;
      subsection-line-break : bool;
      subsection-right-space : length;

      subsubsection-fontsize : length;
      subsubsection-num-function: (int -> int -> int -> int -> string);
      subsubsection-top-space : length;
      subsubsection-bottom-space : length;
      subsubsection-left-space : length;
      subsubsection-line-break : bool;
      subsubsection-right-space : length;

      figure-caption-fontsize : length;
      figure-caption-right-title : inline-text;
      figure-caption-left-title : inline-text;
      show-figure-caption-num : bool;

      table-caption-fontsize : length;
      table-caption-right-title : inline-text;
      table-caption-left-title : inline-text;
      show-table-caption-num : bool;
    |);
    header-footer : (|
      lhead : inline-text;
      chead : inline-text;
      rhead : inline-text;
      header-line : length;
      lfoot : inline-text;
      cfoot : inline-text;
      rfoot : inline-text;
      footer-line : length;

      tocpage-lhead : inline-text;
      tocpage-chead : inline-text;
      tocpage-rhead : inline-text;
      tocpage-header-line : length;
      tocpage-lfoot : inline-text;
      tocpage-cfoot : inline-text;
      tocpage-rfoot : inline-text;
      tocpage-footer-line : length;
    |);
    fonts : (|
      latin-roman : string;
      latin-bold : string;
      latin-italic : string;
      latin-sans : string;
      latin-mono : string;
      cjk-mincho-l : string;
      cjk-mincho-m : string;
      cjk-mincho-bx : string;
      cjk-gothic-m : string;
      cjk-gothic-bx : string;
      cjk-gothic-eb : string;
      math-font : string;
      ratio-latin : float;
      ratio-cjk : float;
      correction-latin : float;
      correction-cjk : float;
    |)
  |)
    `);
    +p{とりあえずは上記の定義に合うように値を入れていけば良い。}
>

+section {article-jaパッケージ} <
  +p{ExDesign用の補助パッケージである。モジュール名は\code(`ArticleJa`);となっている。提供されている関数は
    \listing{
      * b5paper：B5 JISサイズの版面で、\code(`style`);に与える
      * a4paper：A4サイズの版面で、\code(`style`);に与える
      * report：レポート用のデザインで、\code(`design`);に与える
      * article：文書用のデザインで、\code(`design`);に与える
      * fonts：デフォルトのフォント群で、\code(`fonts`);に与える
      * normalHF：普通のヘッダーフッターのデザインで、\code(`header-footer`);に与える
      * emptyHF：何も出ないヘッダーフッターのデザインで、\code(`header-footer`);に与える
    }
  }
>


+section{今後の開発について}<
    +p{これからフォント関係やdeco関係で機能を拡張していく予定。多くの人が開発に参加してこのクラスファイルを広めてくれるとすごく嬉しい。}
>
>
